<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta name="description" content="The CDN for everything on npm"/><link rel="icon" type="image/jpeg" href="/favicon.jpg"/><link rel="stylesheet" href="https://app.unpkg.com/_assets/styles-D6XP7YEC.css"/><link rel="stylesheet" href="https://app.unpkg.com/_assets/code-light-B2LHUSJR.css"/><script type="importmap">{"imports":{"preact":"https://unpkg.com/preact@10.25.4/dist/preact.module.js","preact/hooks":"https://unpkg.com/preact@10.25.4/hooks/dist/hooks.module.js","preact/jsx-runtime":"https://unpkg.com/preact@10.25.4/jsx-runtime/dist/jsxRuntime.module.js"}}</script><script type="module" src="https://app.unpkg.com/_assets/scripts-5LWG6LQM.js" defer></script><title>UNPKG</title><script async src="https://www.googletagmanager.com/gtag/js?id=UA-140352188-1"></script><script>window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-140352188-1');</script></head><body><header class="border-b border-slate-300 bg-slate-100 text-slate-950"><div class="p-4 mx-auto flex justify-between items-center lg:max-w-screen-xl"><h1 class="text-2xl font-bold inline-block"><a href="https://unpkg.com">UNPKG</a></h1><span class="inline-block h-full"><a href="https://github.com/unpkg"><svg aria-hidden="true" fill="currentColor" viewBox="0 0 24 24" class="w-6 h-6"><path fill-rule="evenodd" d="M12.006 2a9.847 9.847 0 0 0-6.484 2.44 10.32 10.32 0 0 0-3.393 6.17 10.48 10.48 0 0 0 1.317 6.955 10.045 10.045 0 0 0 5.4 4.418c.504.095.683-.223.683-.494 0-.245-.01-1.052-.014-1.908-2.78.62-3.366-1.21-3.366-1.21a2.711 2.711 0 0 0-1.11-1.5c-.907-.637.07-.621.07-.621.317.044.62.163.885.346.266.183.487.426.647.71.135.253.318.476.538.655a2.079 2.079 0 0 0 2.37.196c.045-.52.27-1.006.635-1.37-2.219-.259-4.554-1.138-4.554-5.07a4.022 4.022 0 0 1 1.031-2.75 3.77 3.77 0 0 1 .096-2.713s.839-.275 2.749 1.05a9.26 9.26 0 0 1 5.004 0c1.906-1.325 2.74-1.05 2.74-1.05.37.858.406 1.828.101 2.713a4.017 4.017 0 0 1 1.029 2.75c0 3.939-2.339 4.805-4.564 5.058a2.471 2.471 0 0 1 .679 1.897c0 1.372-.012 2.477-.012 2.814 0 .272.18.592.687.492a10.05 10.05 0 0 0 5.388-4.421 10.473 10.473 0 0 0 1.313-6.948 10.32 10.32 0 0 0-3.39-6.165A9.847 9.847 0 0 0 12.007 2Z" clip-rule="evenodd"></path></svg></a></span></div></header><main class="px-4 pb-24 mx-auto lg:max-w-screen-xl lg:pb-44"><header class="pt-6 pb-4 lg:pt-16"><div class="mb-6 flex justify-between items-center"><h1 class="text-black text-3xl leading-tight font-semibold">esp-web-tools</h1><div class="text-right w-48"><span>Version: </span><span data-hydrate="{&quot;key&quot;:&quot;VersionSelector&quot;,&quot;props&quot;:{&quot;availableTags&quot;:{&quot;latest&quot;:&quot;10.1.1&quot;},&quot;availableVersions&quot;:[&quot;10.1.1&quot;,&quot;10.1.0&quot;,&quot;10.0.1&quot;,&quot;10.0.0&quot;,&quot;9.4.3&quot;,&quot;9.4.2&quot;,&quot;9.4.1&quot;,&quot;9.4.0&quot;,&quot;9.3.0&quot;,&quot;9.2.1&quot;,&quot;9.2.0&quot;,&quot;9.1.1&quot;,&quot;9.1.0&quot;,&quot;9.0.5&quot;,&quot;9.0.4&quot;,&quot;9.0.3&quot;,&quot;9.0.2&quot;,&quot;9.0.1&quot;,&quot;9.0.0&quot;,&quot;8.0.6&quot;,&quot;8.0.5&quot;,&quot;8.0.4&quot;,&quot;8.0.3&quot;,&quot;8.0.2&quot;,&quot;8.0.1&quot;,&quot;8.0.0&quot;,&quot;7.5.0&quot;,&quot;7.4.0&quot;,&quot;7.3.1&quot;,&quot;7.3.0&quot;,&quot;7.2.0&quot;,&quot;7.1.0&quot;,&quot;7.0.0&quot;,&quot;6.1.1&quot;,&quot;6.1.0&quot;,&quot;6.0.0&quot;,&quot;5.3.0&quot;,&quot;5.2.1&quot;,&quot;5.2.0&quot;,&quot;5.1.0&quot;,&quot;5.0.0&quot;,&quot;4.1.1&quot;,&quot;4.1.0&quot;,&quot;4.0.2&quot;,&quot;4.0.1&quot;,&quot;4.0.0&quot;,&quot;3.6.0&quot;,&quot;3.5.0&quot;,&quot;3.4.2&quot;,&quot;3.4.1&quot;,&quot;3.4.0&quot;,&quot;3.3.0&quot;,&quot;3.2.0&quot;,&quot;3.1.0&quot;,&quot;3.0.0&quot;,&quot;2.0.2&quot;,&quot;2.0.1&quot;,&quot;2.0.0&quot;,&quot;1.0.3&quot;,&quot;1.0.2&quot;,&quot;1.0.0&quot;,&quot;0.0.1&quot;],&quot;currentVersion&quot;:&quot;10.1.1&quot;,&quot;pathnameFormat&quot;:&quot;/esp-web-tools@%s/files/dist/web/esp32-DlivVhIs.js&quot;,&quot;class&quot;:&quot;w-28 p-1 border border-slate-300 bg-slate-100 text-sm&quot;}}"><select name="version" class="w-28 p-1 border border-slate-300 bg-slate-100 text-sm"><optgroup label="Tags"><option selected value="10.1.1">latest (10.1.1)</option></optgroup><optgroup label="Versions"><option selected value="10.1.1">10.1.1</option><option value="10.1.0">10.1.0</option><option value="10.0.1">10.0.1</option><option value="10.0.0">10.0.0</option><option value="9.4.3">9.4.3</option><option value="9.4.2">9.4.2</option><option value="9.4.1">9.4.1</option><option value="9.4.0">9.4.0</option><option value="9.3.0">9.3.0</option><option value="9.2.1">9.2.1</option><option value="9.2.0">9.2.0</option><option value="9.1.1">9.1.1</option><option value="9.1.0">9.1.0</option><option value="9.0.5">9.0.5</option><option value="9.0.4">9.0.4</option><option value="9.0.3">9.0.3</option><option value="9.0.2">9.0.2</option><option value="9.0.1">9.0.1</option><option value="9.0.0">9.0.0</option><option value="8.0.6">8.0.6</option><option value="8.0.5">8.0.5</option><option value="8.0.4">8.0.4</option><option value="8.0.3">8.0.3</option><option value="8.0.2">8.0.2</option><option value="8.0.1">8.0.1</option><option value="8.0.0">8.0.0</option><option value="7.5.0">7.5.0</option><option value="7.4.0">7.4.0</option><option value="7.3.1">7.3.1</option><option value="7.3.0">7.3.0</option><option value="7.2.0">7.2.0</option><option value="7.1.0">7.1.0</option><option value="7.0.0">7.0.0</option><option value="6.1.1">6.1.1</option><option value="6.1.0">6.1.0</option><option value="6.0.0">6.0.0</option><option value="5.3.0">5.3.0</option><option value="5.2.1">5.2.1</option><option value="5.2.0">5.2.0</option><option value="5.1.0">5.1.0</option><option value="5.0.0">5.0.0</option><option value="4.1.1">4.1.1</option><option value="4.1.0">4.1.0</option><option value="4.0.2">4.0.2</option><option value="4.0.1">4.0.1</option><option value="4.0.0">4.0.0</option><option value="3.6.0">3.6.0</option><option value="3.5.0">3.5.0</option><option value="3.4.2">3.4.2</option><option value="3.4.1">3.4.1</option><option value="3.4.0">3.4.0</option><option value="3.3.0">3.3.0</option><option value="3.2.0">3.2.0</option><option value="3.1.0">3.1.0</option><option value="3.0.0">3.0.0</option><option value="2.0.2">2.0.2</option><option value="2.0.1">2.0.1</option><option value="2.0.0">2.0.0</option><option value="1.0.3">1.0.3</option><option value="1.0.2">1.0.2</option><option value="1.0.0">1.0.0</option><option value="0.0.1">0.0.1</option></optgroup></select></span></div></div><div class="mt-2"><p class="mb-3 leading-tight"><span>Web tools for ESP devices</span></p><div class="lg:hidden"><p class="mt-1 text-sm leading-4"><a href="https://github.com/esphome/esp-web-tools#readme" title="Visit the esp-web-tools website" class="inline-flex items-center hover:text-slate-950 hover:underline"><svg aria-hidden="true" fill="none" viewBox="0 0 24 24" class="w-6 h-6"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.213 9.787a3.391 3.391 0 0 0-4.795 0l-3.425 3.426a3.39 3.39 0 0 0 4.795 4.794l.321-.304m-.321-4.49a3.39 3.39 0 0 0 4.795 0l3.424-3.426a3.39 3.39 0 0 0-4.794-4.795l-1.028.961"></path></svg><span class="ml-1">github.com/esphome/esp-web-tools</span></a></p><p class="mt-1 text-sm leading-4"><a href="https://github.com/esphome/esp-web-tools" title="View the esp-web-tools repository on GitHub" class="inline-flex items-center hover:text-slate-950 hover:underline"><svg aria-hidden="true" fill="currentColor" viewBox="0 0 24 24" class="w-6 h-6"><path fill-rule="evenodd" d="M12.006 2a9.847 9.847 0 0 0-6.484 2.44 10.32 10.32 0 0 0-3.393 6.17 10.48 10.48 0 0 0 1.317 6.955 10.045 10.045 0 0 0 5.4 4.418c.504.095.683-.223.683-.494 0-.245-.01-1.052-.014-1.908-2.78.62-3.366-1.21-3.366-1.21a2.711 2.711 0 0 0-1.11-1.5c-.907-.637.07-.621.07-.621.317.044.62.163.885.346.266.183.487.426.647.71.135.253.318.476.538.655a2.079 2.079 0 0 0 2.37.196c.045-.52.27-1.006.635-1.37-2.219-.259-4.554-1.138-4.554-5.07a4.022 4.022 0 0 1 1.031-2.75 3.77 3.77 0 0 1 .096-2.713s.839-.275 2.749 1.05a9.26 9.26 0 0 1 5.004 0c1.906-1.325 2.74-1.05 2.74-1.05.37.858.406 1.828.101 2.713a4.017 4.017 0 0 1 1.029 2.75c0 3.939-2.339 4.805-4.564 5.058a2.471 2.471 0 0 1 .679 1.897c0 1.372-.012 2.477-.012 2.814 0 .272.18.592.687.492a10.05 10.05 0 0 0 5.388-4.421 10.473 10.473 0 0 0 1.313-6.948 10.32 10.32 0 0 0-3.39-6.165A9.847 9.847 0 0 0 12.007 2Z" clip-rule="evenodd"></path></svg><span class="ml-1">esphome/esp-web-tools</span></a></p></div></div></header><nav class="py-2"><span><a href="https://app.unpkg.com/esp-web-tools@10.1.1" class="text-blue-600 hover:underline">esp-web-tools</a></span><span> / </span><span><a href="https://app.unpkg.com/esp-web-tools@10.1.1/files/dist" class="text-blue-600 hover:underline">dist</a></span><span> / </span><span><a href="https://app.unpkg.com/esp-web-tools@10.1.1/files/dist/web" class="text-blue-600 hover:underline">web</a></span><span> / </span><span>esp32-DlivVhIs.js</span></nav><div class="p-3 border border-slate-300 bg-slate-100 text-sm flex justify-between select-none"><div class="w-64"><span><span>2 lines </span><span>(1 loc) </span><span>â€¢ </span></span><span>2.64 kB</span></div><div class="hidden flex-grow sm:block text-center">JavaScript</div><div class="w-64 hidden sm:block text-right"><a href="https://unpkg.com/esp-web-tools@10.1.1/dist/web/esp32-DlivVhIs.js" class="py-1 px-2 border border-slate-300 bg-slate-100 hover:bg-slate-200 rounded-sm">View Raw</a></div></div><div data-hydrate="{&quot;key&quot;:&quot;CodeViewer&quot;,&quot;props&quot;:{&quot;html&quot;:&quot;&lt;span class=\&quot;hljs-keyword\&quot;>import&lt;/span>{R &lt;span class=\&quot;hljs-keyword\&quot;>as&lt;/span> t}from&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;./rom-B2LvkjpK.js&amp;quot;&lt;/span>;&lt;span class=\&quot;hljs-keyword\&quot;>class&lt;/span> &lt;span class=\&quot;hljs-title class_\&quot;>s&lt;/span> &lt;span class=\&quot;hljs-title\&quot;>extends&lt;/span> &lt;span class=\&quot;hljs-title\&quot;>t&lt;/span>{&lt;span class=\&quot;hljs-keyword\&quot;>constructor&lt;/span>(){&lt;span class=\&quot;hljs-keyword\&quot;>super&lt;/span>(...arguments),&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.CHIP_NAME=&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.IMAGE_CHIP_ID=&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.EFUSE_RD_REG_BASE=&lt;span class=\&quot;hljs-number\&quot;>1073061888&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.DR_REG_SYSCON_BASE=&lt;span class=\&quot;hljs-number\&quot;>1073111040&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.UART_CLKDIV_REG=&lt;span class=\&quot;hljs-number\&quot;>1072955412&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.UART_CLKDIV_MASK=&lt;span class=\&quot;hljs-number\&quot;>1048575&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.UART_DATE_REG_ADDR=&lt;span class=\&quot;hljs-number\&quot;>1610612856&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.XTAL_CLK_DIVIDER=&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.FLASH_SIZES={&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;1MB&amp;quot;&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;2MB&amp;quot;&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>16&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;4MB&amp;quot;&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>32&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;8MB&amp;quot;&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>48&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;16MB&amp;quot;&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>64&lt;/span>},&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.FLASH_WRITE_SIZE=&lt;span class=\&quot;hljs-number\&quot;>1024&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.BOOTLOADER_FLASH_OFFSET=&lt;span class=\&quot;hljs-number\&quot;>4096&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_REG_BASE=&lt;span class=\&quot;hljs-number\&quot;>1072963584&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_USR_OFFS=&lt;span class=\&quot;hljs-number\&quot;>28&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_USR1_OFFS=&lt;span class=\&quot;hljs-number\&quot;>32&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_USR2_OFFS=&lt;span class=\&quot;hljs-number\&quot;>36&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_W0_OFFS=&lt;span class=\&quot;hljs-number\&quot;>128&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_MOSI_DLEN_OFFS=&lt;span class=\&quot;hljs-number\&quot;>40&lt;/span>,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.SPI_MISO_DLEN_OFFS=&lt;span class=\&quot;hljs-number\&quot;>44&lt;/span>}async readEfuse(t,s){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> e=&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.EFUSE_RD_REG_BASE+&lt;span class=\&quot;hljs-number\&quot;>4&lt;/span>*s;&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> t.debug(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;Read efuse &amp;quot;&lt;/span>+e),await t.readReg(e)}async getPkgVersion(t){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> s=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>);let e=s&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>9&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>7&lt;/span>;&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> e+=(s&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>)&amp;lt;&amp;lt;&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>,e}async getChipRevision(t){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> s=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>),e=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>5&lt;/span>),i=await t.readReg(&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.DR_REG_SYSCON_BASE+&lt;span class=\&quot;hljs-number\&quot;>124&lt;/span>);&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> &lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!=(s&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>15&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>)?&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!=(e&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>20&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>)?&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!=(i&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>31&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>)?&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>}async getChipDescription(t){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> s=[&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-D0WDQ6&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-D0WD&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-D2WD&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-U4WDH&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-PICO-D4&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-PICO-V3-02&amp;quot;&lt;/span>];let e=&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;&amp;quot;&lt;/span>;&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> i=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.getPkgVersion(t),a=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.getChipRevision(t),h=&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>==a;&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> &lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!=(&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>&amp;amp;await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>))&amp;amp;&amp;amp;(s[&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>]=&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-S0WDQ6&amp;quot;&lt;/span>,s[&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>]=&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-S0WD&amp;quot;&lt;/span>),h&amp;amp;&amp;amp;(s[&lt;span class=\&quot;hljs-number\&quot;>5&lt;/span>]=&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;ESP32-PICO-V3&amp;quot;&lt;/span>),e=i&amp;gt;=&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>&amp;amp;&amp;amp;i&amp;lt;=&lt;span class=\&quot;hljs-number\&quot;>6&lt;/span>?s[i]:&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;Unknown ESP32&amp;quot;&lt;/span>,!h||&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!==i&amp;amp;&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>!==i||(e+=&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;-V3&amp;quot;&lt;/span>),e+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; (revision &amp;quot;&lt;/span>+a+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;)&amp;quot;&lt;/span>}async getChipFeatures(t){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> s=[&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;Wi-Fi&amp;quot;&lt;/span>],e=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>);&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>===(&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>&amp;amp;e)&amp;amp;&amp;amp;s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; BT&amp;quot;&lt;/span>);&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!==(&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>&amp;amp;e)?s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; Single Core&amp;quot;&lt;/span>):s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; Dual Core&amp;quot;&lt;/span>);&lt;span class=\&quot;hljs-keyword\&quot;>if&lt;/span>(&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!==(&lt;span class=\&quot;hljs-number\&quot;>8192&lt;/span>&amp;amp;e)){&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!==(&lt;span class=\&quot;hljs-number\&quot;>4096&lt;/span>&amp;amp;e)?s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; 160MHz&amp;quot;&lt;/span>):s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; 240MHz&amp;quot;&lt;/span>)}&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> i=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.getPkgVersion(t);-&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>!==[&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>,&lt;span class=\&quot;hljs-number\&quot;>4&lt;/span>,&lt;span class=\&quot;hljs-number\&quot;>5&lt;/span>,&lt;span class=\&quot;hljs-number\&quot;>6&lt;/span>].indexOf(i)&amp;amp;&amp;amp;s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; Embedded Flash&amp;quot;&lt;/span>),&lt;span class=\&quot;hljs-number\&quot;>6&lt;/span>===i&amp;amp;&amp;amp;s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; Embedded PSRAM&amp;quot;&lt;/span>);&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!==(await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>4&lt;/span>)&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>8&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>31&lt;/span>)&amp;amp;&amp;amp;s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; VRef calibration in efuse&amp;quot;&lt;/span>);&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>!==(e&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>14&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>)&amp;amp;&amp;amp;s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; BLK3 partially reserved&amp;quot;&lt;/span>);&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> a=&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>&amp;amp;await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>6&lt;/span>);&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> s.push(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot; Coding Scheme &amp;quot;&lt;/span>+[&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;None&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;3/4&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;Repeat (UNSUPPORTED)&amp;quot;&lt;/span>,&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;Invalid&amp;quot;&lt;/span>][a]),s}async getCrystalFreq(t){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> s=await t.readReg(&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.UART_CLKDIV_REG)&amp;amp;&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.UART_CLKDIV_MASK,e=t.transport.baudrate*s/&lt;span class=\&quot;hljs-number\&quot;>1e6&lt;/span>/&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.XTAL_CLK_DIVIDER;let i;&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> i=e&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>33&lt;/span>?&lt;span class=\&quot;hljs-number\&quot;>40&lt;/span>:&lt;span class=\&quot;hljs-number\&quot;>26&lt;/span>,Math.abs(i-e)&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>&amp;amp;&amp;amp;t.info(&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;WARNING: Unsupported crystal in use&amp;quot;&lt;/span>),i}_d2h(t){&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> s=(+t).toString(&lt;span class=\&quot;hljs-number\&quot;>16&lt;/span>);&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> &lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>===s.length?&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;0&amp;quot;&lt;/span>+s:s}async readMac(t){let s=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>);s&amp;gt;&amp;gt;&amp;gt;=&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>;let e=await &lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>.readEfuse(t,&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>);e&amp;gt;&amp;gt;&amp;gt;=&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>;&lt;span class=\&quot;hljs-keyword\&quot;>const&lt;/span> i=new Uint8Array(&lt;span class=\&quot;hljs-number\&quot;>6&lt;/span>);&lt;span class=\&quot;hljs-keyword\&quot;>return&lt;/span> i[&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>]=e&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>8&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>255&lt;/span>,i[&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>]=&lt;span class=\&quot;hljs-number\&quot;>255&lt;/span>&amp;amp;e,i[&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>]=s&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>24&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>255&lt;/span>,i[&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>]=s&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>16&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>255&lt;/span>,i[&lt;span class=\&quot;hljs-number\&quot;>4&lt;/span>]=s&amp;gt;&amp;gt;&lt;span class=\&quot;hljs-number\&quot;>8&lt;/span>&amp;amp;&lt;span class=\&quot;hljs-number\&quot;>255&lt;/span>,i[&lt;span class=\&quot;hljs-number\&quot;>5&lt;/span>]=&lt;span class=\&quot;hljs-number\&quot;>255&lt;/span>&amp;amp;s,&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>._d2h(i[&lt;span class=\&quot;hljs-number\&quot;>0&lt;/span>])+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;:&amp;quot;&lt;/span>+&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>._d2h(i[&lt;span class=\&quot;hljs-number\&quot;>1&lt;/span>])+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;:&amp;quot;&lt;/span>+&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>._d2h(i[&lt;span class=\&quot;hljs-number\&quot;>2&lt;/span>])+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;:&amp;quot;&lt;/span>+&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>._d2h(i[&lt;span class=\&quot;hljs-number\&quot;>3&lt;/span>])+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;:&amp;quot;&lt;/span>+&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>._d2h(i[&lt;span class=\&quot;hljs-number\&quot;>4&lt;/span>])+&lt;span class=\&quot;hljs-string\&quot;>&amp;quot;:&amp;quot;&lt;/span>+&lt;span class=\&quot;hljs-keyword\&quot;>this&lt;/span>._d2h(i[&lt;span class=\&quot;hljs-number\&quot;>5&lt;/span>])}}export{s &lt;span class=\&quot;hljs-keyword\&quot;>as&lt;/span> ESP32ROM};\n&quot;,&quot;numLines&quot;:2}}"><div class="flex relative bg-white font-mono text-sm leading-6"><div class="py-4 border-b border-x border-slate-300 bg-slate-100 text-right select-none"><div><div class="relative"><a id="L1" href="#L1" class="inline-block w-full pl-4 sm:pl-6 pr-2 text-slate-600 hover:text-slate-950 outline-none">1</a></div></div><div><div class="relative"><a id="L2" href="#L2" class="inline-block w-full pl-4 sm:pl-6 pr-2 text-slate-600 hover:text-slate-950 outline-none">2</a></div></div></div><div class="py-4 pl-4 pr-6 relative border-b border-r border-slate-300 flex-grow whitespace-pre overflow-x-auto" style="tab-size:2;"><span class="hljs-keyword">import</span>{R <span class="hljs-keyword">as</span> t}from<span class="hljs-string">&quot;./rom-B2LvkjpK.js&quot;</span>;<span class="hljs-keyword">class</span> <span class="hljs-title class_">s</span> <span class="hljs-title">extends</span> <span class="hljs-title">t</span>{<span class="hljs-keyword">constructor</span>(){<span class="hljs-keyword">super</span>(...arguments),<span class="hljs-keyword">this</span>.CHIP_NAME=<span class="hljs-string">&quot;ESP32&quot;</span>,<span class="hljs-keyword">this</span>.IMAGE_CHIP_ID=<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.EFUSE_RD_REG_BASE=<span class="hljs-number">1073061888</span>,<span class="hljs-keyword">this</span>.DR_REG_SYSCON_BASE=<span class="hljs-number">1073111040</span>,<span class="hljs-keyword">this</span>.UART_CLKDIV_REG=<span class="hljs-number">1072955412</span>,<span class="hljs-keyword">this</span>.UART_CLKDIV_MASK=<span class="hljs-number">1048575</span>,<span class="hljs-keyword">this</span>.UART_DATE_REG_ADDR=<span class="hljs-number">1610612856</span>,<span class="hljs-keyword">this</span>.XTAL_CLK_DIVIDER=<span class="hljs-number">1</span>,<span class="hljs-keyword">this</span>.FLASH_SIZES={<span class="hljs-string">&quot;1MB&quot;</span>:<span class="hljs-number">0</span>,<span class="hljs-string">&quot;2MB&quot;</span>:<span class="hljs-number">16</span>,<span class="hljs-string">&quot;4MB&quot;</span>:<span class="hljs-number">32</span>,<span class="hljs-string">&quot;8MB&quot;</span>:<span class="hljs-number">48</span>,<span class="hljs-string">&quot;16MB&quot;</span>:<span class="hljs-number">64</span>},<span class="hljs-keyword">this</span>.FLASH_WRITE_SIZE=<span class="hljs-number">1024</span>,<span class="hljs-keyword">this</span>.BOOTLOADER_FLASH_OFFSET=<span class="hljs-number">4096</span>,<span class="hljs-keyword">this</span>.SPI_REG_BASE=<span class="hljs-number">1072963584</span>,<span class="hljs-keyword">this</span>.SPI_USR_OFFS=<span class="hljs-number">28</span>,<span class="hljs-keyword">this</span>.SPI_USR1_OFFS=<span class="hljs-number">32</span>,<span class="hljs-keyword">this</span>.SPI_USR2_OFFS=<span class="hljs-number">36</span>,<span class="hljs-keyword">this</span>.SPI_W0_OFFS=<span class="hljs-number">128</span>,<span class="hljs-keyword">this</span>.SPI_MOSI_DLEN_OFFS=<span class="hljs-number">40</span>,<span class="hljs-keyword">this</span>.SPI_MISO_DLEN_OFFS=<span class="hljs-number">44</span>}async readEfuse(t,s){<span class="hljs-keyword">const</span> e=<span class="hljs-keyword">this</span>.EFUSE_RD_REG_BASE+<span class="hljs-number">4</span>*s;<span class="hljs-keyword">return</span> t.debug(<span class="hljs-string">&quot;Read efuse &quot;</span>+e),await t.readReg(e)}async getPkgVersion(t){<span class="hljs-keyword">const</span> s=await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">3</span>);let e=s&gt;&gt;<span class="hljs-number">9</span>&amp;<span class="hljs-number">7</span>;<span class="hljs-keyword">return</span> e+=(s&gt;&gt;<span class="hljs-number">2</span>&amp;<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-number">3</span>,e}async getChipRevision(t){<span class="hljs-keyword">const</span> s=await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">3</span>),e=await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">5</span>),i=await t.readReg(<span class="hljs-keyword">this</span>.DR_REG_SYSCON_BASE+<span class="hljs-number">124</span>);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>!=(s&gt;&gt;<span class="hljs-number">15</span>&amp;<span class="hljs-number">1</span>)?<span class="hljs-number">0</span>!=(e&gt;&gt;<span class="hljs-number">20</span>&amp;<span class="hljs-number">1</span>)?<span class="hljs-number">0</span>!=(i&gt;&gt;<span class="hljs-number">31</span>&amp;<span class="hljs-number">1</span>)?<span class="hljs-number">3</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>:<span class="hljs-number">0</span>}async getChipDescription(t){<span class="hljs-keyword">const</span> s=[<span class="hljs-string">&quot;ESP32-D0WDQ6&quot;</span>,<span class="hljs-string">&quot;ESP32-D0WD&quot;</span>,<span class="hljs-string">&quot;ESP32-D2WD&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;ESP32-U4WDH&quot;</span>,<span class="hljs-string">&quot;ESP32-PICO-D4&quot;</span>,<span class="hljs-string">&quot;ESP32-PICO-V3-02&quot;</span>];let e=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-keyword">const</span> i=await <span class="hljs-keyword">this</span>.getPkgVersion(t),a=await <span class="hljs-keyword">this</span>.getChipRevision(t),h=<span class="hljs-number">3</span>==a;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>!=(<span class="hljs-number">1</span>&amp;await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">3</span>))&amp;&amp;(s[<span class="hljs-number">0</span>]=<span class="hljs-string">&quot;ESP32-S0WDQ6&quot;</span>,s[<span class="hljs-number">1</span>]=<span class="hljs-string">&quot;ESP32-S0WD&quot;</span>),h&amp;&amp;(s[<span class="hljs-number">5</span>]=<span class="hljs-string">&quot;ESP32-PICO-V3&quot;</span>),e=i&gt;=<span class="hljs-number">0</span>&amp;&amp;i&lt;=<span class="hljs-number">6</span>?s[i]:<span class="hljs-string">&quot;Unknown ESP32&quot;</span>,!h||<span class="hljs-number">0</span>!==i&amp;&amp;<span class="hljs-number">1</span>!==i||(e+=<span class="hljs-string">&quot;-V3&quot;</span>),e+<span class="hljs-string">&quot; (revision &quot;</span>+a+<span class="hljs-string">&quot;)&quot;</span>}async getChipFeatures(t){<span class="hljs-keyword">const</span> s=[<span class="hljs-string">&quot;Wi-Fi&quot;</span>],e=await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">3</span>);<span class="hljs-number">0</span>===(<span class="hljs-number">2</span>&amp;e)&amp;&amp;s.push(<span class="hljs-string">&quot; BT&quot;</span>);<span class="hljs-number">0</span>!==(<span class="hljs-number">1</span>&amp;e)?s.push(<span class="hljs-string">&quot; Single Core&quot;</span>):s.push(<span class="hljs-string">&quot; Dual Core&quot;</span>);<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>!==(<span class="hljs-number">8192</span>&amp;e)){<span class="hljs-number">0</span>!==(<span class="hljs-number">4096</span>&amp;e)?s.push(<span class="hljs-string">&quot; 160MHz&quot;</span>):s.push(<span class="hljs-string">&quot; 240MHz&quot;</span>)}<span class="hljs-keyword">const</span> i=await <span class="hljs-keyword">this</span>.getPkgVersion(t);-<span class="hljs-number">1</span>!==[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>].indexOf(i)&amp;&amp;s.push(<span class="hljs-string">&quot; Embedded Flash&quot;</span>),<span class="hljs-number">6</span>===i&amp;&amp;s.push(<span class="hljs-string">&quot; Embedded PSRAM&quot;</span>);<span class="hljs-number">0</span>!==(await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">4</span>)&gt;&gt;<span class="hljs-number">8</span>&amp;<span class="hljs-number">31</span>)&amp;&amp;s.push(<span class="hljs-string">&quot; VRef calibration in efuse&quot;</span>);<span class="hljs-number">0</span>!==(e&gt;&gt;<span class="hljs-number">14</span>&amp;<span class="hljs-number">1</span>)&amp;&amp;s.push(<span class="hljs-string">&quot; BLK3 partially reserved&quot;</span>);<span class="hljs-keyword">const</span> a=<span class="hljs-number">3</span>&amp;await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">6</span>);<span class="hljs-keyword">return</span> s.push(<span class="hljs-string">&quot; Coding Scheme &quot;</span>+[<span class="hljs-string">&quot;None&quot;</span>,<span class="hljs-string">&quot;3/4&quot;</span>,<span class="hljs-string">&quot;Repeat (UNSUPPORTED)&quot;</span>,<span class="hljs-string">&quot;Invalid&quot;</span>][a]),s}async getCrystalFreq(t){<span class="hljs-keyword">const</span> s=await t.readReg(<span class="hljs-keyword">this</span>.UART_CLKDIV_REG)&amp;<span class="hljs-keyword">this</span>.UART_CLKDIV_MASK,e=t.transport.baudrate*s/<span class="hljs-number">1e6</span>/<span class="hljs-keyword">this</span>.XTAL_CLK_DIVIDER;let i;<span class="hljs-keyword">return</span> i=e&gt;<span class="hljs-number">33</span>?<span class="hljs-number">40</span>:<span class="hljs-number">26</span>,Math.abs(i-e)&gt;<span class="hljs-number">1</span>&amp;&amp;t.info(<span class="hljs-string">&quot;WARNING: Unsupported crystal in use&quot;</span>),i}_d2h(t){<span class="hljs-keyword">const</span> s=(+t).toString(<span class="hljs-number">16</span>);<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>===s.length?<span class="hljs-string">&quot;0&quot;</span>+s:s}async readMac(t){let s=await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">1</span>);s&gt;&gt;&gt;=<span class="hljs-number">0</span>;let e=await <span class="hljs-keyword">this</span>.readEfuse(t,<span class="hljs-number">2</span>);e&gt;&gt;&gt;=<span class="hljs-number">0</span>;<span class="hljs-keyword">const</span> i=new Uint8Array(<span class="hljs-number">6</span>);<span class="hljs-keyword">return</span> i[<span class="hljs-number">0</span>]=e&gt;&gt;<span class="hljs-number">8</span>&amp;<span class="hljs-number">255</span>,i[<span class="hljs-number">1</span>]=<span class="hljs-number">255</span>&amp;e,i[<span class="hljs-number">2</span>]=s&gt;&gt;<span class="hljs-number">24</span>&amp;<span class="hljs-number">255</span>,i[<span class="hljs-number">3</span>]=s&gt;&gt;<span class="hljs-number">16</span>&amp;<span class="hljs-number">255</span>,i[<span class="hljs-number">4</span>]=s&gt;&gt;<span class="hljs-number">8</span>&amp;<span class="hljs-number">255</span>,i[<span class="hljs-number">5</span>]=<span class="hljs-number">255</span>&amp;s,<span class="hljs-keyword">this</span>._d2h(i[<span class="hljs-number">0</span>])+<span class="hljs-string">&quot;:&quot;</span>+<span class="hljs-keyword">this</span>._d2h(i[<span class="hljs-number">1</span>])+<span class="hljs-string">&quot;:&quot;</span>+<span class="hljs-keyword">this</span>._d2h(i[<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;:&quot;</span>+<span class="hljs-keyword">this</span>._d2h(i[<span class="hljs-number">3</span>])+<span class="hljs-string">&quot;:&quot;</span>+<span class="hljs-keyword">this</span>._d2h(i[<span class="hljs-number">4</span>])+<span class="hljs-string">&quot;:&quot;</span>+<span class="hljs-keyword">this</span>._d2h(i[<span class="hljs-number">5</span>])}}export{s <span class="hljs-keyword">as</span> ESP32ROM};
</div></div></div></main></body></html>